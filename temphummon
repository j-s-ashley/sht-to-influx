#!/bin/bash

db=$1
usr=$2
pwrd=$3

MAX_RETRIES=10
MAX_WAIT=60
DELAY_SECONDS=10

JSON_FILE="/opt/local/strips/ITk/sht31-to-influx/docs/sensor-info.json"
PYTHON_SCRIPT="/opt/local/strips/ITk/sht31-to-influx/sensor-connect.py"

sensors=$(jq -c '.sensors[]' "$JSON_FILE")

# Loop through devices in the JSON config
for sensor in $sensors; do
    device_name=$(echo "$sensor" | jq -r '.device_name')
    address=$(echo "$sensor" | jq -r '.address')

    echo "Reading from $device_name ($address)"

    RETRY_COUNT=0
    SUCCESSFUL=false

    # Try connecting
    while [[ RETRY_COUNT -lt MAX_RETRIES ]]; do
        ((RETRY_COUNT++))
        echo "Attempt $RETRY_COUNT of $MAX_RETRIES for $device_name"
       
        python3 "$PYTHON_SCRIPT" --address "$address" | python3 moneater.py eaters.tabeater.TabEater --host 128.3.50.38 --port 8086 --database "$db" --user "$usr" --password "$pwrd" --table TempHum --tag Name="$device_name"
        PID=$!

        # Wait for max time
        for (( i=0; i<$MAX_WAIT; i++ )); do
            if ! kill -0 $PID 2>/dev/null; then
                echo "$device_name completed before timeout"
                SUCCESSFUL=true
                break
            fi
            sleep 1
        done

        if [[ "$SUCCESSFUL" = true ]]; then
            break
        fi

        echo "$device_name timed out, killing process $PID"
        kill -9 $PID 2>/dev/null
        wait $PID 2>/dev/null

        echo "Retrying in $DELAY_SECONDS seconds..."
        sleep $DELAY_SECONDS
    done

    if [[ "$SUCCESSFUL" = false ]]; then
        echo "$device_name failed after $MAX_RETRIES attempts"
        echo "$(date): $device_name ($address) failed" >> failed_connections.log
    fi
done
